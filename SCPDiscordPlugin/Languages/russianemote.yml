# Note: If you want to edit this file you need to either rename it or set discord_overwrite_language to false or it will be reset on server start.

#####################################################################################################################
#                                                                                                                   #
#                                                     EVENTS                                                        #
#                                                                                                                   #
#   message: The message to be displayed. Variables are inserted in the format <var:name>, such as <var:ipaddress>. #
#   regex: A regular expression paired with a replacement string to find and replace parts of a message.            #
#                                                                                                                   #
#####################################################################################################################

# Executed after variables have been inserted but before the message specific regex replacement and before player names have been added on all messages.
global_regex: [

    # Fix formatting issues
    "::ffff:":"",
    " ()":"", 
    "''":"",

    # Classes
    "SCP_":"SCP-",
    "SCP-049_2":"SCP-049-2",
    "SCP-939_":"SCP-939-",
    "SCP-939-89":"SCP-939-109",
    "CLASSD":"D-Class",
    "CHAOS_INSUGENCY":"Chaos Insurgency",
    "SPECTATOR":"Spectator",
    "SCIENTIST":"Scientist",
    "FACILITY_GUARD":"Facility Guard",
    "NTF_CADET":"MTF Cadet",
    "NTF_SCIENTIST":"MTF Scientist",
    "NTF_LIEUTENANT":"MTF Lieutenant",
    "NTF_COMMANDER":"MTF Commander",
    "ZOMBIE":"Zombie",

    # Teams
    "CHAOS_INSURGENCY":"Chaos Insurgency",
    "NINETAILFOX":"MTF",
    "SCIENTISTS":"Scientist",

    # Elevators
    "GateA":"Gate A",
    "GateB":"Gate B",
    "LiftA":"Lift A",
    "LiftB":"Lift B",
    "SCP049Chamber":"SCP-049 Containment Chamber",
    "WarheadRoom":"the warhead room",

    # Non-weapon damage types
    "NUKE":"nuke",
    "FALLDOWN":"fall damage",
    "CONTAIN":"containment",
    "DECONT":"LCZ decontamination",
    "LURE":"the femur breaker",
    "POCKET":"the pocket dimension",
    "TESLA":"tesla energy",
    "WALL":"getting crushed",
    "FLYING":"anticheat",
    "RAGDOLLLESS":"RAGDOLLLESS",

    # Items
    "JANITOR_KEYCARD":"Janitor keycard",
    "SCIENTIST_KEYCARD":"Scientist keycard",
    "MAJOR_SCIENTIST_KEYCARD":"Major Scientist keycard",
    "ZONE_MANAGER_KEYCARD":"Zone Manager keycard",
    "GUARD_KEYCARD":"Guard keycard",
    "SENIOR_GUARD_KEYCARD":"Senior Guard keycard",
    "CONTAINMENT_ENGINEER_KEYCARD":"Containment Engineer keycard",
    "MTF_LIEUTENANT_KEYCARD":"MTF Lieutenant keycard",
    "MTF_COMMANDER_KEYCARD":"MTF Commander keycard",
    "FACILITY_MANAGER_KEYCARD":"Facility Manager keycard",
    "CHAOS_INSURGENCY_DEVICE":"Chaos Insurgency device",
    "O5_LEVEL_KEYCARD":"O5 keycard",
    "RADIO":"radio",
    "COM15":"COM-15",
    "MEDKIT":"medkit",
    "FLASHLIGHT":"flashlight",
    "MICROHID":"Micro-HID",
    "COIN":"coin",
    "CUP":"cup",
    "WEAPON_MANAGER_TABLET":"weapon manager tablet",
    "E11_STANDARD_RIFLE":"Epsilon-11 SR",
    "P90":"P90",
    "DROPPED_5":"5.56mm ammo",
    "MP4":"MP4",
    "LOGICER":"Logicer",
    "FRAG_GRENADE":"grenade",
    "FLASHBANG":"flashbang",
    "DISARMER":"disarmer",
    "DROPPED_7":"7.62mm ammo",
    "FRAG":"grenade",
    "DROPPED_9":"9mm ammo",

    # 914 settings
    "ROUGH":"rough",
    "COARSE":"coarse",
    "ONE_TO_ONE":"1:1",
    "VERY_FINE":"very fine",
    "FINE":"fine"
    ]

# Executes on the final version of the message, this is the only regex that affects player names
final_regex: ["discord.gg":"","http":"","www.":""]

round:
    onroundstart:
        message: ":zap:**Round started.**"
        regex: []
    onconnect:
        # ipaddress - string
        message: ":arrow_right:Player attempting connection..."
        regex: []
    ondisconnect:
        # ipaddress - string
        message: ":arrow_left:A player has disconnected."
        regex: []
    oncheckroundend:
        message: "Checking if round has ended..."
        regex: []
    onroundend:
        # duration - int
        # dclassalive - int
        # dclassdead - int
        # dclassescaped - int
        # dclassstart - int
        # mtfalive - int
        # scientistsalive - int
        # scientistsdead - int
        # scientistsescaped - int
        # scientistsstart - int
        # scpalive - int
        # scpdead - int
        # scpkills - int
        # scpstart - int
        # warheaddetonated - bool
        # zombies - int
        message: >+
            **Round ended after <var:duration> minutes.**
            ```
            Escaped D-class:            <var:dclassescaped>/<var:dclassstart>\n
            Rescued Scientists:         <var:scientistsescaped>/<var:scientistsstart>\n
            Contained SCPs:             <var:scpdead>/<var:scpstart>\n
            Killed by SCP:              <var:scpkills>\n
            Warhead switchwas<var:warheaddetonated> detonated.
            ```
        regex: ["switchwasTrue":"was","switchwasFalse":"was not"]
    onwaitingforplayers:
        message: ":white_check_mark:**Server is ready and waiting for players.**"
        regex: []
    onroundrestart:
        message: ":arrows_counterclockwise:**Round is restarting...**"
        regex: []
    onsetservername:
        # servername - string
        message: "**Server name: <var:servername>.**"
        regex: []
    onscenechanged:
        # scenename - string
        message: "**Scene loaded: <var:scenename>.**"
        regex: []

environment:
    onscp914activate:
        # knobsetting - KnobSetting
        message: ":control_knobs:SCP-914 has been activated on setting <var:knobsetting>."
        regex: []
    onstartcountdown:
        # isresumed - bool
        # timeleft - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        initiated:
            message: ":radioactive:**The on-site nuclear warhead has been activated by <var:name> (<var:steamid>), <var:timeleft> seconds until detonation. All personnel must evacuate immediately.**"
            regex: []
        resumed:
            message: ":radioactive:**The warhead countdown has been resumed <var:name> (<var:steamid>), <var:timeleft> seconds until detonation.**"
            regex: []
    onstopcountdown:
        # timeleft
        # ipaddress
        # name
        # playerid
        # steamid
        # class
        # team
        message: ":radioactive:**The on-site nuclear warhead detonation has been canceled by <var:name> (<var:steamid>).**"
        regex: []
    ondetonate:
        message: ":radioactive:**Detonation of the on-site nuclear warhead has been detected. Dispatching Foundation operatives to investigate.**"
        regex: []
    ondecontaminate:
        message: ":biohazard:**Light Containment Zone de-contamination has been initiated, all biological material will be destroyed.**"
        regex: []
    
player:
    onplayerhurt:
        # damage - float
        # damagetype - DamageType
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: ":red_circle:<var:playername> (<var:playersteamid>) was hurt by <var:attackername> (<var:attackersteamid>) using <var:damagetype> (<var:damage> hp)."
            regex: []
        friendlyfire:
            message: ":red_circle:**<var:playerteam> <var:playername> (<var:playersteamid>) was attacked by teammate <var:attackerteam> <var:attackername> (<var:attackersteamid>) using <var:damagetype> (<var:damage> hp).**"
            regex: []
        # Not currently used
        #self:
        #    message: "<var:playername> (<var:playersteamid>) hurt themselves with <var:damagetype> (<var:damage> hp)."
        #    regex: []
        noattacker: 
            message: ":red_circle:<var:playername> (<var:playersteamid>) took <var:damage> damage by <var:damagetype>."
            regex: []
    onplayerdie:
        # spawnragdoll - bool
        # damagetype - DamageType
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: ":skull:<var:playername> (<var:playersteamid>) was killed by <var:attackername> (<var:attackersteamid>) using <var:damagetype>."
            regex: []
        friendlyfire:
            message: ":skull:**<var:playerteam> <var:playername> (<var:playersteamid>) was teamkilled by <var:attackerteam> <var:attackername> (<var:attackersteamid>) using <var:damagetype>.**"
            regex: []
        # Not currently used
        #self:
        #    message: "<var:playername> (<var:playersteamid>) killed themselves using <var:damagetype>."
        #    regex: []
        nokiller:
            message: ":skull:<var:playername> (<var:playersteamid>) died by <var:damagetype>."
            regex: []
    onplayerpickupitem:
        # item - Item
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":inbox_tray:<var:name> (<var:steamid>) picked up <var:item>."
        regex: []
    onplayerdropitem:
        # item - Item
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":outbox_tray:<var:name> (<var:steamid>) dropped <var:item>."
        regex: []
    onplayerjoin:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":arrow_forward:**<var:name> (<var:steamid>) joined the game.**"
        regex: []
    onnicknameset:
        # nickname - string
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":regional_indicator_n:Player '<var:name> (<var:steamid>)' set their nickname to <var:nickname>."
        regex: []
    onassignteam:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":mens:<var:name> (<var:steamid>) has joined the <var:team> team."
        regex: []
    onsetrole:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":mens:<var:name> (<var:steamid>) has become a <var:class>."
        regex: []
    oncheckescape:
        # allowescape - bool
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        allowed:
            message: "<var:name> (<var:steamid>) has escaped as <var:class>."
            regex: []
        denied:
            message: ""
            regex: []
    onspawn:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":mens:<var:name> (<var:steamid>) spawned as <var:class>."
        regex: []
    ondooraccess:
        # doorname - string
        # permission - string
        # locked - bool
        # lockcooldown - float
        # open - bool 
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        allowed:
            message: ":ballot_box_with_check:<var:name> (<var:steamid>) isopen:<var:open> a door (<var:doorname>) requiring the permission <var:permission>."
            regex: ["isopen:True":"closed", "isopen:False":"opened", " requiring the permission .":""]
        denied:
            message: ":octagonal_sign:<var:name> (<var:steamid>) tried to isopen:<var:open> a locked door (<var:doorname>) requiring the permission <var:permission>."
            regex: ["isopen:True":"close", "isopen:False":"open"," requiring the permission .":"."]
    onintercom:
        # This is not recommended to use outside of debugging
        # cooldowntime - float
        # speechtime - float
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>) is using the intercom."
        regex: []
    onintercomcooldowncheck:
        # This is not recommended to use outside of debugging
        # currentcooldown
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "Intercom cooldown check: <var:currentcooldown>s."
        regex: []
    onpocketdimensionexit:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":door:<var:name> (<var:steamid>) escaped the SCP-106 pocket dimension."
        regex: []
    onpocketdimensionenter:
        # damage - int
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":door:<var:name> (<var:steamid>) was taken into the SCP-106 pocket dimension."
        regex: []
    onpocketdimensiondie:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":skull:<var:name> (<var:steamid>) was lost in the SCP-106 pocket dimension."
        regex: []
    onthrowgrenade:
        # type - GrenadeType
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":bomb:<var:name> (<var:steamid>) threw a <var:type>."
        regex: []
    onplayerinfected:
        # damage - int
        # infecttime - int
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        message: ":skull:<var:playername> (<var:playersteamid>) was cured by SCP-049."
        regex: []
    onspawnragdoll:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: "<var:name> (<var:steamid>)'s <var:class> ragdoll spawned."
        regex: []
    onlure:
        # allowcontain - bool
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":skull:<var:name> (<var:steamid>) was sacrificed to contain SCP-106."
        regex: []
    oncontain106:
        # activatecontainment - bool
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":rotating_light:<var:name> (<var:steamid>) has initiated SCP-106 recall protocol."
        regex: []
    onmedkituse:
        # recoveredamount - int
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":pill:<var:name> (<var:steamid>) used a medkit and healed <var:recoveredhealth>."
        regex: []
    onshoot:
        # weapon - DamageType
        # attackeripaddress - string
        # attackername - string
        # attackerplayerid - int
        # attackersteamid - string
        # attackerclass - Role
        # attackerteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: ":gun:<var:attackername> (<var:attackersteamid>) shot <var:playername> (<var:playersteamid>) with <var:weapon>."
            regex: []
        notarget:
            message: ":gun:<var:attackername> (<var:attackersteamid>) shot at nothing in particular with <var:weapon>."
            regex: []
        friendlyfire:
            message: ":gun:**<var:playerteam> <var:playername> (<var:playersteamid>) shot ally <var:attackerteam> <var:attackername> (<var:attackersteamid>) using <var:weapon>.**"
            regex: []
    on106createportal:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":eight_pointed_black_star:<var:name> (<var:steamid>) has opened a dimensional portal."
        regex: []
    on106teleport:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":eight_pointed_black_star:<var:name> (<var:steamid>) travelled through their pocket dimension."
        regex: []
    onelevatoruse:
        # elevatorname - ElevatorType
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":door:<var:name> (<var:steamid>) called the <var:elevatorname> elevator."
        regex: []
    onhandcuff:
        # cuffed - bool
        # targetipaddress - string
        # targetname - string
        # targetplayerid - int
        # targetsteamid - string
        # targetclass - Role
        # targetteam - Team
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        default:
            message: ":link:<var:targetclass> <var:targetname> (<var:targetsteamid>) was switchcuffed<var:cuffed> by <var:playerclass> <var:playername> (<var:playersteamid>)."
            regex: ["switchcuffedTrue":"cuffed","switchcuffedFalse":"released"]
        nootherplayer:
            message: ":link:<var:targetclass> <var:targetname> (<var:targetsteamid>) was switchcuffed<var:cuffed>."
            regex: ["switchcuffedTrue":"cuffed","switchcuffedFalse":"released"]
    onplayertriggertesla:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        default:
            message: ":zap:<var:team> <var:name> (<var:steamid>) activated a tesla gate."
            regex: []
        ignored:
            message: ":zap:<var:team> <var:name> (<var:steamid>) went through a tesla gate without activating it."
            regex: []
    onscp914changeknob:
        # setting - KnobSetting
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":control_knobs:<var:name> (<var:steamid>) set the SCP-914 knob to \"<var:setting>\"."
        regex: []
    onplayerradioswitch:
        # setting - RadioStatus
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - string
        # class - Role
        # team - Team
        message: ":radio: <var:name> (<var:steamid>) switched their radio to the <var:setting> status."
        regex: []
    onmakenoise: sdfdsfds
        -fdsfds sdfdsfds
        dsfdsf
admin:
    onadminquery:
        # ipaddress - string
        # name - string
        # playerid - int
        # steamid - int
        # class - Role
        # team - Team
        # handled - bool
        # output - string
        # query - string
        # successful - bool
        message: ":keyboard:Admin <var:name> (<var:steamid>) executed command '<var:query>'"
        regex: []
    onauthcheck:
        # allow - bool
        # authtype - AuthType
        # deniedmessage - string
        # ipaddress - string
        # name - string
        # playerid - string
        # steamid - string
        # class - Role
        # team - Team
        message: ":closed_lock_with_key:<var:name> (<var:steamid>) checkaccess<var:allowed>."
        regex: ["checkaccesstrue":"was allowed access to the admin panel", "checkaccessfalse":"tried to get access to the admin panel but was denied"]
    onban:
        # allowban - bool
        # duration - int
        # reason - string
        # result - string
        # playeripaddress - string
        # playername - string
        # playerplayerid - int
        # playersteamid - string
        # playerclass - Role
        # playerteam - Team
        # adminipaddress - string
        # adminname - string
        # adminplayerid - int
        # adminsteamid - string
        # adminclass - Role
        # adminteam - Team
        admin:
            message: ":no_entry:Player <var:playername> (<var:playersteamid>) was banned by <var:adminname> (<var:adminsteamid>) for <var:duration> minutes. Reason: <var:reason>"
            regex: []
        console:
            message: ":no_entry:<var:playername> (<var:playersteamid>) was banned by Skynet for <var:duration> minutes. Reason: <var:reason>"
            regex: []
    
team:
    ondecideteamrespawnqueue:
        # teams - Team[]
        message: "Respawn queue decided."
        regex: []
    onteamrespawn:
        # players - List<Player>
        # spawnchaos - bool
        mtf:
            message: ":cop:**Mobile TaskForce Epsilon-11 designated Nine-Tailed Fox has entered the facility.**"
            regex: []
        ci:
            message: ":spy:**Facility incursion detected, intruders identified as members of hostile GOI \"Chaos Insurgency\".**"
            regex: []
    onsetrolemaxhp:
        # maxhp - int
        # role - Role
        message: "Max HP for <var:role> set to <var:maxhp>."
        regex: []
    onsetscpconfig:
        # banned049 - bool
        # banned079 - bool
        # banned096 - bool
        # banned106 - bool
        # banned173 - bool
        # banned939_53 - bool
        # banned939_89 - bool
        # 049amount - int
        # 079amount - int
        # 096amount - int
        # 106amount - int
        # 173amount - int
        # 939_53amount - int
        # 939_89amount - int
        message: "SCP settings set."
        regex: []
    onsetntfunitname:
        # name - string
        message: ":cop:**MTF unit designated <var:name> has entered the facility.**"
        regex: []
#####################################################################################################################
#                                                                                                                   #
#                                                   DISCORD BOT                                                     #
#                                                                                                                   #
#   message: The message to be displayed. Variables are inserted in the format <var:name>, such as <var:ipaddress>. #
#   regex: A regular expression paired with a replacement string to find and replace parts of a message.            #
#                                                                                                                   #
#####################################################################################################################

botmessages:
    connectedtobot:
        message: "```diff\n+ SCP:SL server connected.```"
        regex: []
    reconnectedtobot:
        message: "```diff\n+ SCP:SL server reconnected.```"
        regex: []

botresponses:
    missingarguments:
        # command - string
        message: "```diff\n- Missing arguments.```"
        regex: []
    invalidsteamid:
        # steamid - string
        message: "```diff\n- Invalid SteamID '<var:steamid>'.```"
        regex: []
    invalidsteamidorip:
        # steamidorip - string
        message: "```diff\n- Invalid SteamID or IP '<var:steamidorip>'.```"
        regex: []
    invalidduration:
        # duration - string
        message: "```diff\n- Invalid duration '<var:duration>'.```"
        regex: []
    playernotfound:
        # steamid - string
        message: "```diff\n- Player with SteamID '<var:steamid>' not found.```"
        regex: []
    playerkicked:
        # name - string
        # steamid - string
        message: "```diff\n+ '<var:name>' (<var:steamid>) was kicked from the server.```"
        regex: []
    playerbanned:
        # name - string
        # steamid - string
        # reason - string
        # duration - string
        message: "```diff\n+ '<var:name>' (<var:steamid>) was banned from the server for the reason '<var:reason>' (<var:duration>).```"
        regex: []
    playerunbanned:
        # steamidorip - string
        message: "```diff\n+ All entries with SteamID/IP '<var:steamidorip>' have been cleared from the ban lists.```"
        regex: []
    kickall:
        # reason - string
        message: "```diff\n+ All players have been kicked from the server with the reason '<var:reason>'.```"
        regex: []
    exit:
        message: "```diff\n- The exit command cannot be used from Discord.```"
        regex: []
    help:
        message: "```diff\n- The help command will be implemented in one of the next few updates of SCPDiscord.```"
        regex: []
    toggletag:
        notinstalled:
            message: "```diff\n- This command requires the ToggleTag plugin.```"
            regex: []
    vpnshield:
        notinstalled:
            message: "```diff\n- This command requires the VPNShield plugin.```"
            regex: []
    # The feedback from a console command, except the custom ones above. (Is not affected by regex other than final_regex)
    consolecommandfeedback:
        # feedback - string
        message: "```fix\n> <var:feedback>```"
        regex: []
topic:
    # players - int
    # maxplayers - int
    # ip - string
    # port - int
    # isvisible - bool
    # isverified - bool
    # uptime - int
    # warheaddetonated - bool
    # decontaminated - bool
    # roundduration - int
    # dclassalive - int
    # dclassdead - int
    # dclassescaped -int
    # dclassstart - int
    # mtfalive - int
    # scientistsalive - int
    # scientistsdead - int
    # scientistsescaped - int
    # scientistsstart - int
    # scpalive - int
    # scpdead - int
    # scpkills - int
    # scpstart - int
    # zombies - int
    # tps - float
    message: "Players online: <var:players>/<var:maxplayers>. Round has lasted <var:roundduration> minutes. Active SCP: <var:scpalive>. Warhead switchdetonation<var:warheaddetonated> been detonated. Uptime: <var:uptime> minutes. IP: <var:ip>:<var:port> TPS: <var:tps>"
    regex: [ "switchdetonationTrue":"has", "switchdetonationFalse":"has not", " 1 minutes":" 1 minute" ]